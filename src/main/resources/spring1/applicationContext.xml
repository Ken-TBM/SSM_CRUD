<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
        <!--spring的配置文件，这里主要是配置和业务逻辑有关的-->
        <context:component-scan base-package="com">
                <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        </context:component-scan>
        <!--导入外部配置文件-->
        <!--导入外部配置文件-->
        <context:property-placeholder location="classpath:dbconfig.properties"></context:property-placeholder>
        <!--1、配置数据源-->
        <bean id="ds" class="com.alibaba.druid.pool.DruidDataSource">
                <property name="username" value="${jdbc.userName}"></property>
                <property name="password" value="${jdbc.password}"></property>
                <property name="url" value="${jdbc.jdbcUrl}"></property>
                <property name="driverClassName" value="${jdbc.driverClass}"></property>
                <property name="maxPoolPreparedStatementPerConnectionSize" value="${jdbc.maxPoolSize}"></property>
        </bean>

        <!--配置和mybatis整合-->
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
                <!--指定mybatis全局配置文件的位置-->
                <property name="configLocation" value="classpath:mybatis1/mybatis-config.xml"></property>
                <property name="dataSource" ref="ds"></property>
                <!--指定mybatis,mapper文件的位置-->
                <property name="mapperLocations" value="classpath:com/mapper/*.xml"></property>
        </bean>
        <!--配置扫描器：将mybatis接口的实现加入到ioc容器中-->
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
                <!--扫描所有dao接口的实现加入到ioc容器中-->
                <property name="basePackage" value="com.mapper"></property>
        </bean>

        <!--配置一个可以执行批量的sqlSession-->
        <bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSession">
                <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
                <constructor-arg name="executorType" value="BATCH"></constructor-arg>
        </bean>

        <!--事务控制-->
        <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
                <!--注入数据源-->
                <property name="dataSource" ref="ds"></property>
        </bean>

        <!--开启注解的事务，使用xml配置形式的事务-->
        <aop:config>
                <!--切入点表达式 访问修饰符权限可以不写-->
                <aop:pointcut id="txPoint" expression="execution(* com.service..*(..))"/>
                <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"></aop:advisor>
        </aop:config>
        <!--配置事务增强，事务如何切入-->
        <tx:advice id="txAdvice">
                <tx:attributes>
                        <!--所有方法都是事务方法-->
                        <tx:method name="*"/>
                        <tx:method name="get*" read-only="true"></tx:method>
                </tx:attributes>
        </tx:advice>
        <!--spring配置文件的核心（数据源、与mybatis整合、事务控制）-->
</beans>